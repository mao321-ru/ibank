pipeline {
    agent any

    environment {
        PROJECT_NAME = 'ibank'
        ENV_NAME = "latest"
        IMAGE_TAG = "latest"

        SERVICE_NAME = "${JOB_NAME.replace('IBank_', '')}-service"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        disableConcurrentBuilds()
        timestamps()
    }

    stages {
        stage('Init') {
            steps {
                echo """
                    Run pipeline for service of ${PROJECT_NAME}: ${SERVICE_NAME}
                    BUILD_TAG: ${BUILD_TAG}
                    BUILD_NUMBER: ${BUILD_NUMBER}
                    JOB_NAME: ${JOB_NAME}
                    GIT_BRANCH: ${GIT_BRANCH}
                    GIT_COMMIT: ${GIT_COMMIT}

                    ENV_NAME: ${ENV_NAME}
                    IMAGE_TAG: ${IMAGE_TAG}
                """
                //sh 'printenv | sort'
            }
        }

        stage('Build docker image') {
            steps {
                sh 'TAG=${IMAGE_TAG} docker compose build ${SERVICE_NAME}'
            }
        }

        stage('Helm dependency update') {
            steps {
                sh 'helm dependency update ./${SERVICE_NAME}/chart'
            }
        }

        stage('Deploy') {
            steps {
                sh """
                helm upgrade --install ibank-${SERVICE_NAME} ./${SERVICE_NAME}/chart \\
                  --take-ownership \\
                  --set global.image.tag=${IMAGE_TAG} \\
                  --set global.domain=${ENV_NAME}.local \\
                  --wait \\

                """
            }
        }

    }

    post {
        success {
            echo "Finished OK"
        }
        failure {
            echo "Finished with ERROR"
        }
    }
}
