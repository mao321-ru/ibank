# Настройки для локального запуска сервисов

logging:
  level:
    #com.example.ibank: TRACE
    #org.springframework.r2dbc.core.DefaultDatabaseClient: DEBUG # логирование SQL-запросов
    #org.springframework: DEBUG
    #io.r2dbc: DEBUG # и добавим больше деталей (не включать в настоящем приложении)
  service:
    #http: true # логирование HTTP-запросов (без тела) и ответов сервисов

keycloak.url: http://localhost:8954

# Значение в поле iss для проверки токена (фиксируется за счет KC_HOSTNAME в docker-compose.yml,
# предполагается что keycloak запущен из docker)
keycloak.issuer.url: http://host.docker.internal:8954

# если будет отдельная то вероятно так (т.к. keycloak.url используется для обращения к keycloak
# и попадает в iss возвращаемого токена)
# keycloak.issuer.url: http://localhost:8954

# bootstrap-servers для Apache Kafka
# используем из docker-compose.yml
#kafka_servers: localhost:8992
# либо Kafka на стандартный порт
kafka_servers: localhost:9092

# Хост и порт для подключения к PostgreSQL
postgres_host: localhost
# можно поиспользовать БД из docker-compose.yml
postgres_port: 8955

# либо отдельную БД - стандартный порт
#postgres_port: 5432

# Сервер Zipkin (хост:порт) для сбора трейсов
# (используем из docker-compose.yml)
zipkin_server: localhost:8911

# URL локально запущенных прикладных сервисов для обращения из других прикладных сервисов
# (порты соответствуют настройкам server.port в *-service-local.yml)
accounts.url: http://localhost:8062
cash.url: http://localhost:8063
transfer.url: http://localhost:8064
exchange.url: http://localhost:8065
exrate.url: http://localhost:8066
blocker.url: http://localhost:8067
notify.url: http://localhost:8068
