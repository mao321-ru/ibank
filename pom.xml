<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.example.ibank</groupId>
    <artifactId>ibank</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>
    <name>ibank-project</name>
    <description>Bank Demo</description>

    <modules>
        <module>confsrv</module>
        <module>eureka</module>
        <module>gateway</module>
        <module>notify-service</module>
        <module>accounts-service</module>
        <module>blocker-service</module>
        <module>cash-service</module>
        <module>exchange-service</module>
        <module>exrate-service</module>
        <module>transfer-service</module>
        <module>front-service</module>
    </modules>

    <properties>
        <java.version>21</java.version>
        <jib.version>3.4.0</jib.version>
        <lombok.version>1.18.36</lombok.version>
        <openapi-generator.version>7.5.0</openapi-generator.version>
        <openapi.generator.version>7.5.0</openapi.generator.version>
        <spring-cloud.version>2024.0.1</spring-cloud.version>
        <testcontainers.version>1.20.6</testcontainers.version>
        <testcontainers-keycloak.version>3.4.0</testcontainers-keycloak.version>
        <springdoc-openapi-starter-webflux-api.version>2.5.0</springdoc-openapi-starter-webflux-api.version>
        <r2dbc-postgresql.version>1.0.7.RELEASE</r2dbc-postgresql.version>

        <module.base.package>${project.parent.groupId}.${module.base.name}</module.base.package>
        <module.test.image>local/${project.parent.artifactId}-${project.artifactId}:test</module.test.image>
        <openapi.spec.path>src/main/resources/api-spec.yaml</openapi.spec.path>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- OpenAPI server generation -->
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webflux-api</artifactId>
                <version>${springdoc-openapi-starter-webflux-api.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <executable>true</executable>
                    </configuration>
                </plugin>

                <!-- JIB для сборки Docker-образа -->
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib.version}</version>
                    <executions>
                        <execution>
                            <id>build-docker-image</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>dockerBuild</goal> <!-- Локальная сборка, можно выполнить: jib:dockerBuild -->
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <from>
                            <!--
                                eclipse-temurin:21.0.5_11-jdk-alpine-3.21
                                - указан SHA-256 дайджест для исключения предупреждения о невоспроизводимости сборки
                            -->
                            <image>eclipse-temurin@sha256:ee09bfd4218b1296231588981fd1e4f74843ca585d5fd6a37bf6078e34c847c7</image>
                        </from>
                        <to>
                            <image>${module.test.image}</image>
                        </to>
                        <allowInsecureRegistries>true</allowInsecureRegistries> <!-- Игнорировать отсутствие аутентификации -->
                        <container>
                            <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                        </container>
                    </configuration>
                </plugin>

                <!-- для удаления Docker-образа -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>3.1.0</version>
                    <executions>
                        <execution>
                            <id>remove-docker-images</id>
                            <phase>clean</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <executable>docker</executable>
                                <arguments>
                                    <argument>rmi</argument>
                                    <argument>-f</argument>
                                    <argument>${module.test.image}</argument>
                                </arguments>
                                <skip>${skipDockerClean}</skip> <!-- Опционально: отключение через -DskipDockerClean -->
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- подключение исходников общих классов и ресурсов в модули -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.3.0</version>
                    <executions>
                        <!-- общие тестовые классы и ресурсы -->
                        <execution>
                            <id>add-test-sources</id>
                            <phase>generate-test-sources</phase>
                            <goals>
                                <goal>add-test-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${project.basedir}/../common-test/base/src/test/java</source>
                                </sources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>add-test-resources</id>
                            <phase>generate-test-resources</phase>
                            <goals>
                                <goal>add-test-resource</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>${project.basedir}/../common-test/base/src/test/resources</directory>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                        <!-- для использования контейнера PostgreSQL в тестах -->
                        <execution>
                            <id>add-test-postgres-sources</id>
                            <phase>generate-test-sources</phase>
                            <!-- для подключения в модуле нужно указать goal
                            <goals>
                                <goal>add-test-source</goal>
                            </goals>
                            -->
                            <configuration>
                                <sources>
                                    <source>${project.basedir}/../common-test/postgres/src/test/java</source>
                                </sources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>add-test-postgres-resources</id>
                            <phase>generate-test-resources</phase>
                            <!-- для подключения в модуле нужно указать goal
                            <goals>
                                <goal>add-test-resource</goal>
                            </goals>
                            -->
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>${project.basedir}/../common-test/postgres/src/test/resources</directory>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                        <!-- Сервис-клиент, выполняющий запросы к другим сервисам через Gateway -->
                        <execution>
                            <id>add-shared-client</id>
                            <phase>generate-sources</phase>
                            <!-- для подключения в модуле нужно указать goal
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            -->
                            <configuration>
                                <sources>
                                    <source>${project.basedir}/../shared/client/src/main/java</source>
                                </sources>
                            </configuration>
                        </execution>
                        <!-- Сервис ресурсов, предоставляющий API для других сервисов -->
                        <execution>
                            <id>add-shared-resourceserver</id>
                            <phase>generate-sources</phase>
                            <!-- для подключения в модуле нужно указать goal
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            -->
                            <configuration>
                                <sources>
                                    <source>${project.basedir}/../shared/resourceserver/src/main/java</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- генерация по OpenAPI спецификации -->
                <plugin>
                    <groupId>org.openapitools</groupId>
                    <artifactId>openapi-generator-maven-plugin</artifactId>
                    <version>${openapi.generator.version}</version>
                    <configuration>
                        <!-- Общие настройки -->
                        <generateApiTests>false</generateApiTests>
                        <generateModelTests>false</generateModelTests>
                        <generateApiDocumentation>false</generateApiDocumentation>
                        <generateModelDocumentation>false</generateModelDocumentation>
                        <typeMappings>
                            <typeMapping>double=java.math.BigDecimal</typeMapping>
                        </typeMappings>
                        <configOptions>
                            <reactive>true</reactive>
                            <useSpringBoot3>true</useSpringBoot3>
                            <useJakartaEe>true</useJakartaEe>
                            <dateLibrary>java8</dateLibrary>
                            <openApiNullable>false</openApiNullable>
                        </configOptions>
                    </configuration>
                    <!-- Конфигурации для разных генераторов -->
                    <executions>
                        <execution>
                            <id>spring-server-generator</id>
                            <configuration>
                                <generatorName>spring</generatorName>
                                <inputSpec>${project.basedir}/${openapi.spec.path}</inputSpec>
                                <output>${project.build.directory}/generated-sources/openapi</output>
                                <modelPackage>${module.base.package}.model</modelPackage>
                                <apiPackage>${module.base.package}.api</apiPackage>
                                <invokerPackage>${module.base.package}</invokerPackage>
                                <configOptions>
                                    <hideGenerationTimestamp>true</hideGenerationTimestamp>
                                    <requestMappingMode>controller</requestMappingMode>
                                    <interfaceOnly>true</interfaceOnly>
                                    <skipDefaultInterface>true</skipDefaultInterface>
                                    <library>spring-boot</library>
                                    <useTags>true</useTags>
                                    <serializableModel>true</serializableModel>
                                    <returnSuccessCode>true</returnSuccessCode>
                                </configOptions>
                            </configuration>
                        </execution>
                        <execution>
                            <id>java-client-generator</id>
                            <configuration>
                                <generatorName>java</generatorName>
                                <library>webclient</library>
                                <output>${project.build.directory}/generated-sources</output>
                                <configOptions>
                                    <java8>true</java8>
                                </configOptions>
                            </configuration>
                        </execution>
                        <execution>
                            <id>accounts-client-generator</id>
                            <configuration>
                                <generatorName>java</generatorName>
                                <library>webclient</library>
                                <output>${project.build.directory}/generated-sources</output>
                                <configOptions>
                                    <java8>true</java8>
                                </configOptions>
                                <inputSpec>${project.basedir}/../accounts-service/${openapi.spec.path}</inputSpec>
                                <apiPackage>${module.base.package}.accounts.api</apiPackage>
                                <modelPackage>${module.base.package}.accounts.model</modelPackage>
                                <invokerPackage>${module.base.package}.accounts.invoker</invokerPackage>
                            </configuration>
                        </execution>
                        <execution>
                            <id>cash-client-generator</id>
                            <configuration>
                                <generatorName>java</generatorName>
                                <library>webclient</library>
                                <output>${project.build.directory}/generated-sources</output>
                                <configOptions>
                                    <java8>true</java8>
                                </configOptions>
                                <inputSpec>${project.basedir}/../cash-service/${openapi.spec.path}</inputSpec>
                                <apiPackage>${module.base.package}.cash.api</apiPackage>
                                <modelPackage>${module.base.package}.cash.model</modelPackage>
                                <invokerPackage>${module.base.package}.cash.invoker</invokerPackage>
                            </configuration>
                        </execution>
                        <execution>
                            <id>transfer-client-generator</id>
                            <configuration>
                                <generatorName>java</generatorName>
                                <library>webclient</library>
                                <output>${project.build.directory}/generated-sources</output>
                                <configOptions>
                                    <java8>true</java8>
                                </configOptions>
                                <inputSpec>${project.basedir}/../transfer-service/${openapi.spec.path}</inputSpec>
                                <apiPackage>${module.base.package}.transfer.api</apiPackage>
                                <modelPackage>${module.base.package}.transfer.model</modelPackage>
                                <invokerPackage>${module.base.package}.transfer.invoker</invokerPackage>
                            </configuration>
                        </execution>
                        <execution>
                            <id>exchange-client-generator</id>
                            <configuration>
                                <generatorName>java</generatorName>
                                <library>webclient</library>
                                <output>${project.build.directory}/generated-sources</output>
                                <configOptions>
                                    <java8>true</java8>
                                </configOptions>
                                <inputSpec>${project.basedir}/../exchange-service/${openapi.spec.path}</inputSpec>
                                <apiPackage>${module.base.package}.exchange.api</apiPackage>
                                <modelPackage>${module.base.package}.exchange.model</modelPackage>
                                <invokerPackage>${module.base.package}.exchange.invoker</invokerPackage>
                            </configuration>
                        </execution>
                        <execution>
                            <id>blocker-client-generator</id>
                            <configuration>
                                <generatorName>java</generatorName>
                                <library>webclient</library>
                                <output>${project.build.directory}/generated-sources</output>
                                <configOptions>
                                    <java8>true</java8>
                                </configOptions>
                                <inputSpec>${project.basedir}/../blocker-service/${openapi.spec.path}</inputSpec>
                                <apiPackage>${module.base.package}.blocker.api</apiPackage>
                                <modelPackage>${module.base.package}.blocker.model</modelPackage>
                                <invokerPackage>${module.base.package}.blocker.invoker</invokerPackage>
                            </configuration>
                        </execution>
                        <execution>
                            <id>notify-client-generator</id>
                            <configuration>
                                <generatorName>java</generatorName>
                                <library>webclient</library>
                                <output>${project.build.directory}/generated-sources</output>
                                <configOptions>
                                    <java8>true</java8>
                                </configOptions>
                                <inputSpec>${project.basedir}/../notify-service/${openapi.spec.path}</inputSpec>
                                <apiPackage>${module.base.package}.notify.api</apiPackage>
                                <modelPackage>${module.base.package}.notify.model</modelPackage>
                                <invokerPackage>${module.base.package}.notify.invoker</invokerPackage>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <!-- автоподключение зависимостей для общих тестовых классов из common-test -->
        <profile>
            <id>common-test-deps</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-test</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.testcontainers</groupId>
                    <artifactId>junit-jupiter</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.testcontainers</groupId>
                    <artifactId>postgresql</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>com.github.dasniko</groupId>
                    <artifactId>testcontainers-keycloak</artifactId>
                    <version>${testcontainers-keycloak.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

</project>
