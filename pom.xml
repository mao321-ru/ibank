<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.example.ibank</groupId>
    <artifactId>ibank</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>
    <name>ibank-project</name>
    <description>Bank Demo</description>

    <modules>
        <module>confsrv</module>
        <module>eureka</module>
        <module>gateway</module>
        <module>front</module>
    </modules>

    <properties>
        <java.version>21</java.version>
        <jib.version>3.4.0</jib.version>
        <lombok.version>1.18.36</lombok.version>
        <spring-cloud.version>2024.0.1</spring-cloud.version>
        <testcontainers.version>1.20.6</testcontainers.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <executable>true</executable>
                    </configuration>
                </plugin>
                <!-- JIB для сборки Docker-образа -->
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib.version}</version>
                    <executions>
                        <execution>
                            <id>build-docker-image</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>dockerBuild</goal> <!-- Локальная сборка, можно выполнить: jib:dockerBuild -->
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <from>
                            <!--
                                eclipse-temurin:21.0.5_11-jdk-alpine-3.21
                                - указан SHA-256 дайджест для исключения предупреждения о невоспроизводимости сборки
                            -->
                            <image>eclipse-temurin@sha256:ee09bfd4218b1296231588981fd1e4f74843ca585d5fd6a37bf6078e34c847c7</image>
                        </from>
                        <to>
                            <image>${docker-test-image}</image>
                        </to>
                        <allowInsecureRegistries>true</allowInsecureRegistries> <!-- Игнорировать отсутствие аутентификации -->
                        <container>
                            <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                        </container>
                    </configuration>
                </plugin>
                <!-- для удаления Docker-образа -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>3.1.0</version>
                    <executions>
                        <execution>
                            <id>remove-docker-images</id>
                            <phase>clean</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <executable>docker</executable>
                                <arguments>
                                    <argument>rmi</argument>
                                    <argument>-f</argument>
                                    <argument>${docker-test-image}</argument>
                                </arguments>
                                <skip>${skipDockerClean}</skip> <!-- Опционально: отключение через -DskipDockerClean -->
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- подключение исходников общих тестовых классов в модули -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.3.0</version>
                    <executions>
                        <execution>
                            <id>add-test-sources</id>
                            <phase>generate-test-sources</phase>
                            <goals>
                                <goal>add-test-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${project.basedir}/../common-test/src/test/java</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
